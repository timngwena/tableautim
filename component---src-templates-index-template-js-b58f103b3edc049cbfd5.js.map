{"version":3,"sources":["webpack:///./src/components/Feed/Feed.js","webpack:///./src/components/Feed/index.js","webpack:///./src/templates/index-template.js","webpack:///./node_modules/classnames/bind.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/Pagination/index.js"],"names":["Feed","edges","className","styles","map","edge","key","node","fields","slug","dateTime","moment","frontmatter","date","format","to","categorySlug","category","title","description","query","IndexTemplate","data","pageContext","useSiteMetadata","siteTitle","siteSubtitle","subtitle","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","allMarkdownRemark","pageTitle","isIndex","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","call","join","module","exports","cx","bind","Pagination","prevClassName","nextClassName","rel","PAGINATION","PREV_PAGE","NEXT_PAGE"],"mappings":"4KA0CeA,EA/BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAuB,yBAC5BC,UAAcC,IAAM,MADQ,IAE5BF,EAAMG,KAAI,SAACC,GAAD,OAAW,yBACbH,UAAcC,IAAM,WACxBG,IAAQD,EAAKE,KAAKC,OAAOC,MACzB,yBACIP,UAAcC,IAAO,oBACzB,0BACKD,UAAcC,IAAO,wBAC1BO,SAAaC,IAAON,EAAKE,KAAKK,YAAYC,MAAMC,OAAO,kBAFvD,IAE8EH,IAAON,EAAKE,KAAKK,YAAYC,MAAMC,OAAO,iBAFxH,KAIA,0BAAOZ,UAAcC,IAAO,6BAC5B,0BAAOD,UAAcC,IAAO,6BAC5B,0BAAOD,UAAcC,IAAO,6BAC5B,kBACA,OADA,CACKY,GAAOV,EAAKE,KAAKC,OAAOQ,aAC7Bd,UAAcC,IAAO,kCAFrB,IAE4DE,EAAKE,KAAKK,YAAYK,SAFlF,KADA,MAMA,wBAAIf,UAAcC,IAAO,qBACzB,kBACA,OADA,CACKD,UAAcC,IAAO,yBAC1BY,GAAOV,EAAKE,KAAKC,OAAOC,MAFxB,IAEmCJ,EAAKE,KAAKK,YAAYM,MAFzD,KADA,KAjBiB,IAqBZ,uBAAIhB,UAAcC,IAAO,2BAAzB,IAAyDE,EAAKE,KAAKK,YAAYO,YAA/E,KArBY,IAqBuF,kBAAC,OAAD,CAAMjB,UAAcC,IAAO,uBACnIY,GAAOV,EAAKE,KAAKC,OAAOC,MADgF,UArBvF,WCZ7B,mC,oCCAA,8IA8CaW,EAAK,YA+BHC,UA9DO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACDC,cAAtCC,EADuC,EAC9CP,MAA4BQ,EADkB,EAC5BC,SAGxBC,EAKEL,EALFK,YACAC,EAIEN,EAJFM,YACAC,EAGEP,EAHFO,YACAC,EAEER,EAFFQ,aACAC,EACET,EADFS,aAIM/B,EAAUqB,EAAKW,kBAAfhC,MACFiC,EAAYN,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDH,EAAcA,EAEnF,OACE,kBAAC,IAAD,CAAQP,MAAOgB,EAAWf,YAAaO,GACrC,kBAAC,IAAD,CAASS,SAAO,IAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMlC,MAAOA,IACb,kBAAC,IAAD,CACE8B,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA,Q,qBCxCvB,QAAQ,QASR,WACE,aAEA,IAAIO,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKC,MAAQA,KAAKH,IAAQA,QAC7B,GAAII,MAAMC,QAAQL,GACvBJ,EAAQM,KAAKP,EAAWW,MAAMH,KAAMH,SAC/B,GAAgB,WAAZC,EACT,IAAK,IAAItC,KAAOqC,EACVP,EAAOc,KAAKP,EAAKrC,IAAQqC,EAAIrC,IAC/BiC,EAAQM,KAAKC,MAAQA,KAAKxC,IAAQA,IAM1C,OAAOiC,EAAQY,KAAK,KAGeC,EAAOC,SAC1Cf,EAAoB,QAAIA,EACxBc,EAAOC,QAAUf,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aApCL,I,6HCKMgB,EAAKhB,IAAWiB,KAAKpD,KA8BZqD,EA5BI,SAAC,GAKN,IAJZzB,EAIW,EAJXA,aACAC,EAGW,EAHXA,aACAH,EAEW,EAFXA,YACAC,EACW,EADXA,YAEM2B,EAAgBH,EAAG,CACvB,yBAAyB,EACzB,kCAAmCxB,IAG/B4B,EAAgBJ,EAAG,CACvB,yBAAyB,EACzB,kCAAmCzB,IAGrC,OACE,yBAAK3B,UAAWC,IAAM,YACpB,yBAAKD,UAAWC,IAAM,kBACpB,kBAAC,OAAD,CAAMwD,IAAI,OAAO5C,GAAIe,EAAcC,EAAe,IAAK7B,UAAWuD,GAAgBG,IAAWC,YAE/F,yBAAK3D,UAAWC,IAAM,kBACpB,kBAAC,OAAD,CAAMwD,IAAI,OAAO5C,GAAIc,EAAcG,EAAe,IAAK9B,UAAWwD,GAAgBE,IAAWE,cCrCrG","file":"component---src-templates-index-template-js-b58f103b3edc049cbfd5.js","sourcesContent":["// @flow strict\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport type { Edges } from '../../types';\nimport styles from './Feed.module.scss';\n\ntype Props = {\n    edges: Edges\n};\n\nconst Feed = ({ edges }: Props) => (<\n    div className = { styles['feed'] } > {\n        edges.map((edge) => (<\n            div className = { styles['feed__item'] }\n            key = { edge.node.fields.slug } >\n            <\n            div className = { styles['feed__item-meta'] } >\n            <\n            time className = { styles['feed__item-meta-time'] }\n            dateTime = { moment(edge.node.frontmatter.date).format('MMMM DD, YYYY') } > { moment(edge.node.frontmatter.date).format('MMMM DD, YYYY') } <\n            /time>  \n            < span className = { styles['feed__item-meta-divider'] } />  \n            < span className = { styles['feed__item-meta-divider'] }/> \n            < span className = { styles['feed__item-meta-category'] } >\n            <\n            Link to = { edge.node.fields.categorySlug }\n            className = { styles['feed__item-meta-category-link'] } > { edge.node.frontmatter.category } < /Link> < /\n            span >\n            </div>\n            <h2 className = { styles['feed__item-title'] } >\n            <\n            Link className = { styles['feed__item-title-link'] }\n            to = { edge.node.fields.slug } > { edge.node.frontmatter.title } < /Link> < /\n            h2 > < p className = { styles['feed__item-description'] } > { edge.node.frontmatter.description } < /p> <Link className = { styles['feed__item-readmore'] }\n            to = { edge.node.fields.slug } > Read < /Link>  <\n            /div >\n        ))\n    }\n    </div>\n);\n\nexport default Feed;\n","// @flow strict\nexport { default } from './Feed';\n","// @flow strict\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\nimport type { PageContext, AllMarkdownRemark } from '../types';\n\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext\n};\n\nconst IndexTemplate = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext;\n\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar isIndex />\n      <Page>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n            readingTime {\n              text\n            }\n            tagSlugs\n          }\n          frontmatter {\n            title\n            date\n            category\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// @flow strict\nimport React from 'react';\nimport classNames from 'classnames/bind';\nimport { Link } from 'gatsby';\nimport { PAGINATION } from '../../constants';\nimport styles from './Pagination.module.scss';\n\ntype Props = {\n  prevPagePath: string,\n  nextPagePath: string,\n  hasNextPage: boolean,\n  hasPrevPage: boolean\n};\n\nconst cx = classNames.bind(styles);\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage\n}: Props) => {\n  const prevClassName = cx({\n    'pagination__prev-link': true,\n    'pagination__prev-link--disable': !hasPrevPage\n  });\n\n  const nextClassName = cx({\n    'pagination__next-link': true,\n    'pagination__next-link--disable': !hasNextPage\n  });\n\n  return (\n    <div className={styles['pagination']}>\n      <div className={styles['pagination__prev']}>\n        <Link rel=\"prev\" to={hasPrevPage ? prevPagePath : '/'} className={prevClassName}>{PAGINATION.PREV_PAGE}</Link>\n      </div>\n      <div className={styles['pagination__next']}>\n        <Link rel=\"next\" to={hasNextPage ? nextPagePath : '/'} className={nextClassName}>{PAGINATION.NEXT_PAGE}</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// @flow strict\nexport { default } from './Pagination';\n"],"sourceRoot":""}